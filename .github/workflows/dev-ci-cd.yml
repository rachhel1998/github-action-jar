name: Build, Package, and Deploy (Dev)

on:
  push:
    branches: [ dev ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Build and package Java Lambda function (FormDefinitionServiceLambda)
      - name: Set up Java environment
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          architecture: x64
          cache: maven

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and package Lambda function
        run: cd FormDefinitionServiceLambda && mvn clean install -DskipTests

      - name: Package Lambda function with shade plugin
        run: cd FormDefinitionServiceLambda && mvn clean package shade:shade

      - name: Create staging directory
        run: mkdir staging

      - name: Copy JAR file to staging directory
        run: cp /home/runner/work/github-action-jar/github-action-jar/FormDefinitionServiceLambda/target/FormDefinitionServiceLambda-*.jar staging/

      # Deploy using CDK (FormDefinitionServiceCdk)
      - name: Install CDK Toolkit
        uses: actions/checkout@v3

      - name: Configure AWS credentials (replace with your secret management)
        # Use AWS Secrets Manager or other secure method to store credentials
        run: aws configure --access-key-id ${{ secrets.DEV_AWS_ACCESS_KEY_ID }} --secret-access-key ${{ secrets.DEV_AWS_SECRET_ACCESS_KEY }} --region us-east-1  # Update region if needed

      - name: Deploy CDK stack (dev environment)
        run: cdk deploy DevStack -c environment=dev  # Replace DevStack with your stack name

      - uses: actions/upload-artifact@v4
        with:
          name: Lambda-Package
          path: staging/*.jar
